{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/henryfradley/personalProjects/micaela-designs/components/Form.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport useState from 'react';\n\nconst Form = () => {\n  const {\n    0: message,\n    1: writeMessage\n  } = useState({\n    name: '',\n    email: '',\n    text: ''\n  });\n  const {\n    0: submitted,\n    1: setSubmit\n  } = useState(false);\n  const {\n    0: hover,\n    1: setHover\n  } = useState(true);\n\n  const handleNameChange = event => {\n    event.persist();\n    writeMessage(values => _objectSpread(_objectSpread({}, values), {}, {\n      name: event.target.value\n    }));\n  };\n\n  const handleEmailChange = event => {\n    event.persist();\n    writeMessage(values => _objectSpread(_objectSpread({}, values), {}, {\n      email: event.target.value\n    }));\n  };\n\n  const handleTextChange = event => {\n    event.persist();\n    writeMessage(values => _objectSpread(_objectSpread({}, values), {}, {\n      text: event.target.value\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const res = await fetch('/api/send', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(message)\n    });\n    setSubmit(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"formHolder\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      class: \"contactForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        onChange: handleNameChange,\n        value: message.name,\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        onChange: handleNameChange,\n        value: message.name,\n        name: \"name\",\n        type: \"email\",\n        placeholder: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        required: true,\n        onChange: handleNameChange,\n        value: message.name,\n        name: \"name\",\n        type: \"text\",\n        class: \"bigInput\",\n        placeholder: \"Let's chat! What can I do for you?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"submitButton\",\n        type: \"submit\",\n        value: \"LET'S DO THIS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/henryfradley/personalProjects/micaela-designs/components/Form.jsx"],"names":["useState","Form","message","writeMessage","name","email","text","submitted","setSubmit","hover","setHover","handleNameChange","event","persist","values","target","value","handleEmailChange","handleTextChange","handleSubmit","preventDefault","res","fetch","method","headers","body","JSON","stringify"],"mappings":"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","sourcesContent":["import useState from 'react';\n\n\nconst Form = () => {\n\n\n  const [message, writeMessage] = useState({\n    name: '',\n    email: '',\n    text: ''\n  });\n\n  const [submitted, setSubmit] = useState(false);\n  const [ hover, setHover ] = useState(true);\n\n\n  const handleNameChange = (event) => {\n    event.persist();\n    writeMessage((values) => ({\n      ...values,\n      name: event.target.value,\n    }));\n  };\n\n  const handleEmailChange = (event) => {\n    event.persist();\n    writeMessage((values) => ({\n      ...values,\n      email: event.target.value,\n    }));\n  };\n\n  const handleTextChange = (event) => {\n    event.persist();\n    writeMessage((values) => ({\n      ...values,\n      text: event.target.value,\n    }));\n  };\n\n\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const res = await fetch('/api/send', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(message)\n    });\n\n    setSubmit(true);\n\n  };\n\n  return (\n    <div class=\"formHolder\">\n      <form class=\"contactForm\">\n        <input required onChange={handleNameChange} value={message.name} name=\"name\" type=\"text\" placeholder=\"Your Name\"></input>\n        <input required onChange={handleNameChange} value={message.name} name=\"name\" type=\"email\" placeholder=\"Your Email\"></input>\n        <textarea required onChange={handleNameChange} value={message.name} name=\"name\" type=\"text\" class=\"bigInput\" placeholder=\"Let's chat! What can I do for you?\"></textarea>\n        <input class=\"submitButton\" type=\"submit\" value=\"LET'S DO THIS\"></input>\n      </form>\n\n\n    </div>\n  );\n};\n\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}